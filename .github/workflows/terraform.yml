name: "Terragrunt infrastructure pipeline with GitHub Actions"

on:
  push: 
    branches:
    - main
    paths:
    - env/**
    #- modules/**   
  pull_request:
    branches:
    - main
    paths:
    - env/**
    #- modules/**

env: 
  TF_LOG: INFO
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
  TERRAFORM_VERSION: 1.4.2
  TERRAGRUNT_VERSION: v0.55.1

jobs:
  sandbox-plan:
    name: "sandbox-plan"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        aws_region: [eu-central-1]
        cin_region: [de, eu]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-central-1

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/terragrunt
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          bin/terragrunt -v
      
      - name: Add SSH private key    
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create artifacts directories
        run: |
          mkdir -p ${{ matrix.aws_region }}/${{ matrix.cin_region }}

      - name: Plan All sandbox
        run: |
          cd env/sandbox/${{ matrix.aws_region }}/${{ matrix.cin_region }}
          terragrunt run-all plan -out $GITHUB_WORKSPACE/${{ matrix.aws_region }}/${{ matrix.cin_region }}/plan.tfplan --terragrunt-non-interactive
       
      - name: Publish Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.aws_region }}-${{ matrix.cin_region }}
          path: ${{ matrix.aws_region }}/${{ matrix.cin_region }}/plan.tfplan    


  sandbox-apply:
    name: "sandbox-apply"
    needs:
      - sandbox-plan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        aws_region: [eu-central-1]
        cin_region: [de, eu]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: eu-central-1

    steps:
      - name: Checkout the repository to the runner
        uses: actions/checkout@v2

      - name: Setup Terraform with specified version on the runner
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/terragrunt
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          bin/terragrunt -v
      
      - name: Add SSH private key    
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.aws_region }}-${{ matrix.cin_region }}
          path: ${{ matrix.aws_region }}/${{ matrix.cin_region }} 

      - name: Apply All sandbox
        run: |
          cd env/sandbox/${{ matrix.aws_region }}/${{ matrix.cin_region }}
          terragrunt run-all apply $GITHUB_WORKSPACE/${{ matrix.aws_region }}/${{ matrix.cin_region }}/plan.tfplan --terragrunt-non-interactive
